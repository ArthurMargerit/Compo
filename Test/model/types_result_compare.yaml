TYPES:
  type_a:
    NAME: type_a
    DEFINITION: int
  TYPE_b:
    NAME: TYPE_b
    DEFINITION: int
  type_c:
    NAME: type_c
    DEFINITION: int
  TYPE_d:
    NAME: TYPE_d
    DEFINITION: int
  type_e:
    NAME: type_e
    DEFINITION: int***
  type_f:
    NAME: type_f
    DEFINITION: const int
  type_g:
    NAME: type_g
    DEFINITION: const int*
  type_h:
    DEFINITION: int
    NAME: type_h
    VALUE: 3
  type_i:
    NAME: type_i
    DEFINITION: int**
    VALUE: null
  type_j:
    NAME: type_j
    DEFINITION: void*
    VALUE: null
  type_k:
    NAME: type_k
    DEFINITION: int**
    VALUE: 0
  bool:
    DEFINITION: bool
    NAME: bool
    NATIF: true
  boolean:
    DEFINITION: bool
    NAME: boolean
    NATIF: true
  char:
    DEFINITION: char
    NAME: char
    NATIF: true
  void:
    DEFINITION: void
    NAME: void
    NATIF: true
  complex:
    DEFINITION: complex
    NAME: complex
    NATIF: true
  int:
    DEFINITION: int
    NAME: int
    NATIF: true
  decimal:
    DEFINITION: int
    NAME: decimal
  long:
    DEFINITION: long
    NAME: long
    NATIF: true
  float:
    DEFINITION: float
    NAME: float
    NATIF: true
  double:
    DEFINITION: double
    NAME: double
    NATIF: true
  std::string:
    DEFINITION: std::string
    NAME: std::string
    NATIF: true
    INCLUDE: <string>
  int_array_10:
    DEFINITION: std::array<int,10>
    NAME: int_array_10
    INCLUDE: <array>
  int_array_20:
    DEFINITION: std::array<int,20>
    NAME: int_array_20
    INCLUDE: <array>
  float_array_10:
    DEFINITION: std::array<float,10>
    NAME: float_array_10
    INCLUDE: <array>
  float_array_20:
    DEFINITION: std::array<float,20>
    NAME: float_array_20
    INCLUDE: <array>
  func_a:
    DEFINITION: std::function<void(int,int)>
    NAME: func_a
    INCLUDE: <functional>
  func_b:
    DEFINITION: std::function<int(int,int)>
    NAME: func_b
    INCLUDE: <functional>
  p_if:
    DEFINITION: std::pair<int,float>
    NAME: p_if
    INCLUDE: <utility>
  p_iiff:
    DEFINITION: std::tuple<int,int,float,float>
    NAME: p_iiff
    INCLUDE: <utility>
  p_ip_ii:
    DEFINITION: std::pair<int,std::pair<int,int>>
    NAME: p_ip_ii
    INCLUDE: <utility>
  Lapin:
    DEFINITION: Lapin
    NAME: Lapin
    NATIF: true
    INCLUDE: '"lib/Lapin.hpp"'
  lapin_10:
    DEFINITION: Lapinx<10>
    NAME: lapin_10
    INCLUDE: '"lib/Lapin.hpp"'
STRUCTS: {}
INTERFACES: {}
COMPOSANTS: {}
DEPLOIMENTS: {}
IMPORTS: {}
