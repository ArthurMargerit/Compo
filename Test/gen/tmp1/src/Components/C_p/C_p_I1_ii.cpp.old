
#include "Components/C_p/C_p_I1_ii.hpp"
#include "Components/C_p/C_p.hpp"

namespace C_p {

  I1_ii::I1_ii(C_p* comp):composant(comp)
                                                            ,f()(),f1()(),f2(i32(),f3(i32(),f4()(),f5(i32(){
  return;
  }

  //! Destructor
  I1_ii::~I1_ii() noexcept {
  return;
  }

  C_p& I1_ii::get_c() const {
  return *this->composant;
  }


  
  


  

  
  // I1 ///////////////////////////////////////////////////////////////////
// get/set f()
void I1_ii::get_f()() const  {
  return this->f();
      
}

void I1_ii::set_f()(const void& f())  {
  this->f() = f();
  
}
// get/set f1()
void I1_ii::get_f1()() const  {
  return this->f1();
      
}

void I1_ii::set_f1()(const void& f1())  {
  this->f1() = f1();
  
}
// get/set f2(i32
void I1_ii::get_f2(i32() const  {
      return this->f2(i32;
      
}

void I1_ii::set_f2(i32(const void& f2(i32)  {
  this->f2(i32 = f2(i32;
  
}
// get/set f3(i32
void I1_ii::get_f3(i32() const  {
      return this->f3(i32;
      
}

void I1_ii::set_f3(i32(const void& f3(i32)  {
  this->f3(i32 = f3(i32;
  
}
// get/set f4()
i32 I1_ii::get_f4()() const  {
  return this->f4();
      
}

void I1_ii::set_f4()(const i32& f4())  {
  this->f4() = f4();
  
}
// get/set f5(i32
i32 I1_ii::get_f5(i32() const  {
      return this->f5(i32;
      
}

void I1_ii::set_f5(i32(const i32& f5(i32)  {
  this->f5(i32 = f5(i32;
  
}


  

  void I1_ii::save(std::ostream& os) const {
  os << "{";
  os << "type:"
     << "I1_ii";

  os << ",data:{";

  os << "f():" << this->get_f()();
  os << ",";
  os << "f1():" << this->get_f1()();
  os << ",";
    os << "f2(i32:" << this->get_f2(i32();
    os << ",";
    os << "f3(i32:" << this->get_f3(i32();
    os << ",";
    os << "f4():" << this->get_f4()();
    os << ",";
    os << "f5(i32:" << this->get_f5(i32();
    
    os << "}";
    

    os << "}";
  }


  void I1_ii::load(std::istream& is) {

  }

  } // namespace C_p
