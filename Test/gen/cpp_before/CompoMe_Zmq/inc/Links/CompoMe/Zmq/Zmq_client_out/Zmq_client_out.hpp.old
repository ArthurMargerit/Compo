#pragma once

#include "Links/Link.hpp"

namespace CompoMe {
class Function_stream;
class Return_stream;
class Interface;
} // namespace CompoMe

#include "Data/CompoMe_Zmq.hpp"

#include <functional>

namespace CompoMe {

namespace Zmq {

class Zmq_client_out : public CompoMe::Link, public CompoMe::Link_out {
public:
  Zmq_client_out();
  virtual ~Zmq_client_out();

  void step() override;
  void connect() override;
  void disconnect() override;

  // Get and set /////////////////////////////////////////////////////////////

public:
  // Function
  // ///////////////////////////////////////////////////////////////////

  virtual void set_destination(

      CompoMe::String addr);

private:
  // DATA ////////////////////////////////////////////////////////////////////
};

} // namespace Zmq

} // namespace CompoMe
