#pragma once

#include <ostream>

#include "Data/Types.hpp"


#include "Data/Struct.hpp"






struct B : public Struct {

  /////////////////////////////////////////////////////////////////////////////
  //                                ATTRIBURE                                //
  /////////////////////////////////////////////////////////////////////////////

  /////////////////////////////////////////////////////////////////////////////
  //                               CONSTRUCTEUR                              //
  /////////////////////////////////////////////////////////////////////////////
  B();

  

  /////////////////////////////////////////////////////////////////////////////
  //                               GET and SET                               //
  /////////////////////////////////////////////////////////////////////////////


  /////////////////////////////////////////////////////////////////////////////
  //                               FUNCTION                                  //
  /////////////////////////////////////////////////////////////////////////////
virtual  a0();
virtual int a1();
virtual int a2(int a);
virtual int a3(int a, int);
virtual int a4(int a, int, int);

virtual void to_stream(std::ostream&) const;
};

///////////////////////////////////////////////////////////////////////////////
//                               << STREAM >>                                //
///////////////////////////////////////////////////////////////////////////////
std::ostream& operator<<(std::ostream& os, const B& c);
std::istream& operator>>(std::istream& os,B& c);

std::ostream& operator<<(std::ostream& os, const B* c);
std::istream& operator>>(std::istream& os,B*& c);
