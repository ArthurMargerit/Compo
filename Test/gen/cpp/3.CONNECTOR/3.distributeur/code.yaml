- TYPE:
    NAME: int
    NATIF: true

- TYPE:
    NAME: void
    NATIF: true

- TYPE:
    NAME: Vec
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "std::vector<T>"
    INCLUDE: "<vector>"
    ARG:
      - T

- INTERFACE:
    NAME: Math
    FUNCTION:
      - int ping(int a, int b)
      - int f1(int a)
      - int f2()
      - void f3()
    DATA:
      - int a
      - int b

- COMPONENT:
    NAME: C1
    PROVIDE:
      - Math p

- INTERFACE:
    NAME: Math_many_return
    GEN: many_return(Math,Vec)

- INTERFACE:
    NAME: Math_many
    GEN: many(Math,Vec)

- INTERFACE:
    NAME: Math_by_id
    GEN: add_params(Math,int)


# to many with the same params but a different return for each
- CONNECTOR:
    NAME: Math_many_return_dist
    INTERFACE: Math
    INTERFACE_MANY_RETURN: Math_many_return
    MODEL:
      CPP: Distri_many_return.cpp
      HPP: Distri_many_return.hpp

# to many wit a different params for each and a different return for each
- CONNECTOR:
    NAME: Math_many_dist
    INTERFACE: Math
    INTERFACE_MANY: Math_many
    MODEL:
      CPP: Distri_many.cpp
      HPP: Distri_many.hpp

# by id
- CONNECTOR:
    NAME: Math_by_id_dist
    INTERFACE: Math
    INTERFACE_WITH_ID: Math_by_id
    MODEL:
      CPP: Distri_by_id.cpp
      HPP: Distri_by_id.hpp


# on all
- CONNECTOR:
    NAME: Math_all_dist
    INTERFACE: Math
    INTERFACE_WITH_ID: Math_by_id
    INTERFACE_MANY: Math_many
    INTERFACE_MANY_RETURN: Math_many_return
    MODEL:
      CPP: Distri_all.cpp
      HPP: Distri_all.hpp


# complex With Two levels INTERFACE
- INTERFACE:
    NAME: Math_many_return_by_id
    GEN: add_params(Math_many_return,int)

# complex With Two levels CONNECTOR
- CONNECTOR:
    NAME: Math_many_return_by_id_dist
    INTERFACE: Math_many_return
    INTERFACE_WITH_ID: Math_many_return_by_id
    MODEL:
      CPP: Distri_by_id.cpp
      HPP: Distri_by_id.hpp
