cmake_minimum_required(VERSION 3.7)

PROJECT("compo_test")
set(CMAKE_BINARY_DIR ${CMAKE_BINARY_DIR}/build)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_CXX_STANDARD 11)

#
# DEP BUILD
#

FILE(GLOB file_dep src/*.cpp)

foreach(dep ${file_dep})

    GET_FILENAME_COMPONENT(NAME_DEP ${dep} NAME)
    string(REGEX REPLACE "\\.[^.]*$" "" NAME_DEP ${NAME_DEP})

    if(NOT ${NAME_DEP}  STREQUAL "structs")

      ADD_EXECUTABLE(${NAME_DEP} ${dep} "src/structs.cpp")
      TARGET_INCLUDE_DIRECTORIES(${NAME_DEP} PUBLIC "include")
      TARGET_LINK_LIBRARIES(${NAME_DEP} "-lpthread")

      add_custom_target(run_${NAME_DEP}
        COMMAND ./build/bin/${NAME_DEP}
        DEPENDS ${NAME_DEP}
        WORKING_DIRECTORY ${CMAKE_PROJECT_DIR})

    endif(NOT ${NAME_DEP} STREQUAL "structs")

endforeach(dep)

#
# COMPOSANTS BUILD
#
FILE(GLOB file_compo src/*)
foreach(composant ${file_compo})
  if(IS_DIRECTORY ${composant})
    GET_FILENAME_COMPONENT(NAME_COMPO ${composant} NAME)
    MESSAGE("===" ${NAME_COMPO} "===")
    FILE(GLOB  FILE_COMPO ${composant}/*.cpp)
    ADD_LIBRARY(${NAME_COMPO} ${FILE_COMPO})
    TARGET_INCLUDE_DIRECTORIES(${NAME_COMPO} PUBLIC "include")

    foreach(dep ${file_dep})
      GET_FILENAME_COMPONENT(NAME_DEP ${dep} NAME)
      string(REGEX REPLACE "\\.[^.]*$" "" NAME_DEP ${NAME_DEP})
      if(NOT ${NAME_DEP}  STREQUAL "structs")
        TARGET_LINK_LIBRARIES(${NAME_DEP} ${NAME_COMPO})
      endif(NOT ${NAME_DEP}  STREQUAL "structs")
    endforeach(dep)

endif(IS_DIRECTORY ${composant})
endforeach(composant)



