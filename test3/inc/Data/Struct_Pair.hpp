#pragma once

#include <ostream>

#include "Data/Types.hpp"


#include "Data/Struct.hpp"










struct Pair : public Struct {

  /////////////////////////////////////////////////////////////////////////////
  //                                ATTRIBURE                                //
  /////////////////////////////////////////////////////////////////////////////
  int a;
  int b;

  /////////////////////////////////////////////////////////////////////////////
  //                               CONSTRUCTEUR                              //
  /////////////////////////////////////////////////////////////////////////////
  Pair();

  

  Pair(int p_a,int p_b);
  

  /////////////////////////////////////////////////////////////////////////////
  //                               GET and SET                               //
  /////////////////////////////////////////////////////////////////////////////
  int get_a() const;

  void set_a(const int value);
  int get_b() const;

  void set_b(const int value);


  /////////////////////////////////////////////////////////////////////////////
  //                               FUNCTION                                  //
  /////////////////////////////////////////////////////////////////////////////

virtual void to_stream(std::ostream&) const;
};

///////////////////////////////////////////////////////////////////////////////
//                               << STREAM >>                                //
///////////////////////////////////////////////////////////////////////////////
std::ostream& operator<<(std::ostream& os, const Pair& c);
std::istream& operator>>(std::istream& os,Pair& c);

std::ostream& operator<<(std::ostream& os, const Pair* c);
std::istream& operator>>(std::istream& os,Pair*& c);
