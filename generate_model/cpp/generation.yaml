########################### TYPES ######################################
- NAME: Base
  TARGET_NAME: "BASE"
  FOR: ""
  FILES:
    - IN: Serialization_context.hpp
      OUT: "inc/Serialization_context.hpp"
    - IN: Serialization_context.cpp
      OUT: "src/Serialization_context.cpp"
  COMMANDS:
    - "clang-format -i src/Serialization_context.cpp inc/Serialization_context.hpp"

########################### TYPES ######################################
- NAME: Types.Atomic
  TARGET_NAME: "TYPES.{{D_NAME}}"
  FOR: "TYPES.*"
  IF:
    NOT:
      NATIF: true
  FILES:
    - IN: Data/Type_atomic_define.hpp
      OUT: "inc/Data/{{NAMESPACE.replace('::','/')}}/Type_{{NAME}}.hpp"
    - IN: Data/Type_atomic_define.cpp
      OUT: "src/Data/{{NAMESPACE.replace('::','/')}}/Type_{{NAME}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Data/{{NAMESPACE.replace('::','/')}}/Type_{{NAME}}.hpp src/Data/{{NAMESPACE.replace('::','/')}}/Type_{{NAME}}.cpp"

- NAME: Types.union.atomic
  TARGET_NAME: "TYPE"
  FOR: "TYPES"
  DEFAULT:
    TYPES: "MODEL:TYPES"
    FILE: "MODEL:FILE"
    STRUCTS: "MODEL:STRUCTS"
    IMPORTS: "MODEL:IMPORTS"
    ERRORS: "MODEL:ERRORS"
  FILES:
    - IN: Data/Type_union_define.hpp
      OUT: "inc/Data/{{FILE.replace('.yaml','')}}.hpp"
    - IN: Data/Type_union_define.cpp
      OUT: "src/Data/{{FILE.replace('.yaml','')}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Data/{{FILE.replace('.yaml','')}}.hpp"

########################### STRUCTS ######################################
- NAME: Structs
  FOR: "STRUCTS.*"
  DEFAULT:
    FILE: "MODEL:FILE"
    STRUCTS: "MODEL:STRUCTS"
    TYPES: "MODEL:TYPES"
    MAIN: " MODEL:."
  TARGET_NAME: "STRUCTS.{{D_NAME}}"
  FILES:
    - IN: Data/Struct_template.hpp
      OUT: "inc/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}.hpp"
    - IN: Data/Struct_template.cpp
      OUT: "src/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}.cpp"
    - IN: Data/Struct_template_serialization.cpp
      OUT: "src/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}_serialization.cpp"      
    - IN: Data/Struct_fac_template.hpp
      OUT: "inc/Data/{{NAMESPACE.replace('::','/')}}/Struct_fac_{{NAME}}.hpp"
    - IN: Data/Struct_fac_template.cpp
      OUT: "src/Data/{{NAMESPACE.replace('::','/')}}/Struct_fac_{{NAME}}.cpp"
  COMMANDS:
    - "clang-format -i  inc/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}.hpp src/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}.cpp"

- NAME: Structs_builder
  FOR: "STRUCTS.*"
  DEFAULT:
    FILE: "MODEL:FILE"
    STRUCTS: "MODEL:STRUCTS"
    TYPES: "MODEL:TYPES"
  TARGET_NAME: "STRUCTS.{{D_NAME}}.BUILDER"
  FILES:
    - IN: Data/Struct_builder.hpp
      OUT: "inc/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}_builder.hpp"
    - IN: Data/Struct_builder.cpp
      OUT: "src/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}_builder.cpp"
  COMMANDS:
    - "clang-format -i  inc/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}_builder.hpp src/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}_builder.cpp"


- NAME: Structs
  FOR: "STRUCTS"
  TARGET_NAME: "STRUCT"
  DEFAULT:
    STRUCTS: "MODEL:STRUCTS"
  FILES:
    - IN: Data/Struct_parent.hpp
      OUT: "inc/Data/Struct.hpp"
    - IN: Data/Struct_fac_parent.hpp
      OUT: "inc/Data/Struct_fac.hpp"
    - IN: Data/Struct_parent.cpp
      OUT: "src/Data/Struct.cpp"
    - IN: Data/Struct_fac_parent.cpp
      OUT: "src/Data/Struct_fac.cpp"
  COMMANDS:
    - "clang-format -i src/Data/Struct.cpp inc/Data/Struct.hpp"

# swig
- NAME: Structs.SWIG
  FOR: "STRUCTS"
  TARGET_NAME: "STRUCTS.SWIG"
  FILES:
    - IN: Data/Struct.i
      OUT: "swig/Data/Struct.i"
  COMMANDS:
    - "swig -c++ -python -Iinc swig/Data/Struct.i"

- NAME: Structs.SWIG.S
  FOR: "STRUCTS.*"
  DEFAULT:
    FILE: "MODEL:FILE"
    STRUCTS: "MODEL:STRUCTS"
    TYPES: "MODEL:TYPES"
  TARGET_NAME: "STRUCTS.SWIG.{{DNAME}}"
  IF:
    SWIG: true
  FILES:
    - IN: Data/Struct_swig.i
      OUT: "swig/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}.i"
  COMMANDS:
    - "swig -c++ -python -Iswig -Iinc swig/Data/{{NAMESPACE.replace('::','/')}}/Struct_{{NAME}}.i"


########################### ERRORS ######################################
- NAME: Errors
  FOR: "ERRORS.*"
  DEFAULT:
    FILE: "MODEL:FILE"
    MAIN: "MODEL:."
    STRUCTS: "MODEL:STRUCTS"
    TYPES: "MODEL:TYPES"
  TARGET_NAME: "STRUCTS.{{D_NAME}}"
  FILES:
    - IN: Errors/Error_template.hpp
      OUT: "inc/Errors/{{D_NAME.replace('::','/')}}.hpp"
    - IN: Errors/Error_template.cpp
      OUT: "src/Errors/{{D_NAME.replace('::','/')}}.cpp"
    - IN: Errors/Error_fac_template.hpp
      OUT: "inc/Errors/{{D_NAME.replace('::','/')}}_fac.hpp"
    - IN: Errors/Error_fac_template.cpp
      OUT: "src/Errors/{{D_NAME.replace('::','/')}}_fac.cpp"
  COMMANDS:
    - "clang-format -i inc/Errors/{{D_NAME.replace('::','/')}}.hpp src/Errors/{{D_NAME.replace('::','/')}}.cpp"
    - "clang-format -i inc/Errors/{{D_NAME.replace('::','/')}}_fac.hpp src/Errors/{{D_NAME.replace('::','/')}}_fac.cpp"

- NAME: Errors
  FOR: "ERRORS"
  TARGET_NAME: "ERROR"
  DEFAULT:
    STRUCTS: "MODEL:ERRORS"
  FILES:
    - IN: Errors/Error_parent.hpp
      OUT: "inc/Errors/Error.hpp"
    - IN: Errors/Error_fac_parent.hpp
      OUT: "inc/Errors/Error_fac.hpp"
    - IN: Errors/Error_parent.cpp
      OUT: "src/Errors/Error.cpp"
    - IN: Errors/Error_fac_parent.cpp
      OUT: "src/Errors/Error_fac.cpp"
  COMMANDS:
    - "clang-format -i src/Errors/Error.cpp inc/Errors/Error.hpp src/Errors/Error_fac.cpp inc/Errors/Error_fac.hpp"


########################### INTERFACE ###################################    
- NAME: Interface
  FOR: ""
  DEFAULT:
      FILE: "MODEL:FILE"
  TARGET_NAME: "INTERFACE"
  FILES:
    - IN: Interfaces/Interface_parent.hpp
      OUT: "inc/Interfaces/Interface.hpp"
    - IN: Interfaces/Interface_parent.cpp
      OUT: "src/Interfaces/Interface.cpp"
  COMMANDS:
    - "clang-format -i src/Interfaces/Interface.cpp inc/Interfaces/Interface.hpp"

- NAME: Interface_fake
  FOR: ""
  TARGET_NAME: "INTERFACE.FAKE"
  FILES:
    - IN: Interfaces/fake/Interface_fake_parent.hpp
      OUT: "inc/Interfaces/Fake.hpp"
    - IN: Interfaces/fake/Interface_fake_parent.cpp
      OUT: "src/Interfaces/Fake.cpp"
  COMMANDS:
    - "clang-format -i src/Interfaces/Fake.cpp inc/Interfaces/Fake.hpp"

- NAME: Interface_caller
  FOR: ""
  TARGET_NAME: "INTERFACE.CALLER"
  FILES:
    - IN: Interfaces/caller/Interface_caller_parent.hpp
      OUT: "inc/Interfaces/Caller.hpp"
    - IN: Interfaces/caller/Interface_caller_parent.cpp
      OUT: "src/Interfaces/Caller.cpp"
  COMMANDS:
    - "clang-format -i src/Interfaces/Caller.cpp inc/Interfaces/Caller.hpp"


- NAME: Interface_stream
  FOR: ""
  TARGET_NAME: "INTERFACE.STREAM"
  FILES:
    - IN: Interfaces/stream/Return_stream_send.hpp
      OUT: "inc/Interfaces/Return_stream_send.hpp"
    - IN: Interfaces/stream/Return_stream_recv.hpp
      OUT: "inc/Interfaces/Return_stream_recv.hpp"
    - IN: Interfaces/stream/Function_stream_send.hpp
      OUT: "inc/Interfaces/Function_stream_send.hpp"
    - IN: Interfaces/stream/Function_stream_recv.hpp
      OUT: "inc/Interfaces/Function_stream_recv.hpp"
  COMMANDS:
    - "clang-format -i inc/Interfaces/Function_stream_send.hpp"
    - "clang-format -i inc/Interfaces/Function_stream_recv.hpp"
    - "clang-format -i inc/Interfaces/Return_stream_send.hpp"
    - "clang-format -i inc/Interfaces/Return_stream_recv.hpp"

# - NAME: Interfaces.SWIG
#   FOR: "STRUCTS.*"
#   DEFAULT:
#     FILE: "MODEL:FILE"
#     STRUCTS: "MODEL:STRUCTS"
#     TYPES: "MODEL:TYPES"
#   TARGET_NAME: "STRUCTS.SWIG.{{D_NAME}}"
#   IF:
#     SWIG: true
#   FILES:
#     - IN: Interfaces/Interface_swig.i
#       OUT: "swig/Interfaces/{{DNAME.replace('::','/')}}/{{NAME}}.i"
#   COMMANDS:
#     - "swig -c++ -python -Iinc OUT: swig/Interfaces/{{DNAME.replace('::','/')}}/{{NAME}}.i"

- NAME: Interfaces
  FOR: "INTERFACES.*"
  TARGET_NAME: "INTERFACES.{{D_NAME}}"
  DEFAULT:
    FILE: "MODEL:FILE"
    MAIN: "MODEL:."
  FILES:
    - IN: Interfaces/Interface_template.hpp
      OUT: "inc/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp"
    - IN: Interfaces/Interface_template.cpp
      OUT: "src/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp src/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp"

# - NAME: Interfaces_dispatcher
#   FOR: "INTERFACES.*"
#   IF:
#     OPTION.DISPATCH: true
#   TARGET_NAME: "INTERFACES.{{NAME}}.DISPATCHER"
#   DEFAULT:
#     MAIN: "MODEL:."
#   FILES:
#     - IN: Interfaces/Interface_dispatcher_template.hpp
#       OUT: "inc/Interfaces/{{NAME}}/{{NAME}}_dispatcher.hpp"
#     - IN: Interfaces/Interface_dispatcher_template.cpp
#       OUT: "src/Interfaces/{{NAME}}/{{NAME}}_dispatcher.cpp"
#   COMMANDS:
#     - "clang-format -i inc/Interfaces/{{NAME}}/{{NAME}}.hpp src/Interfaces/{{NAME}}/{{NAME}}.cpp"

- NAME: Interface_fake
  FOR: "INTERFACES.*"
  TARGET_NAME: "INTERFACES.{{D_NAME}}_fake"
  DEFAULT:
    FILE: "MODEL:FILE"
  FILES:
    - IN: Interfaces/fake/Interface_fake_template.hpp
      OUT: "inc/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_fake.hpp"
    - IN: Interfaces/fake/Interface_fake_template.cpp
      OUT: "src/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_fake.cpp"
  COMMANDS:
    - "clang-format -i src/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_fake.cpp inc/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_fake.hpp"

- NAME: Interface_call
  FOR: "INTERFACES.*"
  TARGET_NAME: "INTERFACES.{{D_NAME}}_call"
  DEFAULT:
    FILE: "MODEL:FILE"
  FILES:
    - IN: Interfaces/caller/Interface_caller_template.hpp
      OUT: "inc/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_caller.hpp"
    - IN: Interfaces/caller/Interface_caller_template.cpp
      OUT: "src/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_caller.cpp"
  COMMANDS:
    - "clang-format -i inc/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_caller.hpp \
    src/Interfaces/{{D_NAME.replace('::','/')}}/{{NAME}}_caller.cpp"

########################### COMPONENT ###################################

- NAME: Component
  FOR: ""
  TARGET_NAME: "COMPONENT"
  DEFAULT:
    FILE: "MODEL:FILE"
  FILES:
    - IN: Components/Component_parent.hpp
      OUT: inc/Components/Component.hpp
    - IN: Components/Require_helper.hpp
      OUT: inc/Components/Require_helper.hpp
    - IN: Components/Require_helper_multi.hpp
      OUT: inc/Components/Require_helper_multi.hpp
    - IN: Components/Component_parent.cpp
      OUT: src/Components/Component.cpp
  COMMANDS:
    - "clang-format -i inc/Components/Component.hpp src/Components/Component.cpp"

# swig
- NAME: Structs.SWIG
  FOR: "STRUCTS"
  TARGET_NAME: "STRUCTS.SWIG"
  FILES:
    - IN: Components/Component.i
      OUT: swig/Components/Component.i
  COMMANDS:
    - "swig -c++ -python -Iinc swig/Components/Component.i"


- NAME: Components
  FOR: "COMPONENTS.*"
  DEFAULT:
    MAIN : "MODEL:."
    FILE : "MODEL:FILE"
  TARGET_NAME: "COMPONENTS.{{D_NAME}}"
  FILES:
    - IN: Components/Component_template.hpp
      OUT: "inc/Components/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp"
    - IN: Components/Component_template.cpp
      OUT: "src/Components/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp"
    - IN: Components/Component_template_serialization.cpp
      OUT: "src/Components/{{D_NAME.replace('::','/')}}/{{NAME}}_serialization.cpp"
  COMMANDS:
    - "clang-format -i src/Components/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp inc/Components/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp"

- NAME: Components_provides
  FOR: "COMPONENTS.*(COMPONENT).PROVIDE.*"
  DEFAULT:
    FILE: "MODEL:FILE"
  TARGET_NAME: "COMPONENTS.{{COMPONENT.D_NAME}}.PROVIDE.{{INTERFACE.NAME}}.{{NAME}}"
  FILES:
    - IN: Components/provide/Interface_component_template.hpp
      OUT: "inc/Components/{{COMPONENT.D_NAME.replace('::','/')}}/{{COMPONENT.NAME}}_{{INTERFACE.NAME}}_{{NAME}}.hpp"
    - IN: Components/provide/Interface_component_template.cpp
      OUT: "src/Components/{{COMPONENT.D_NAME.replace('::','/')}}/{{COMPONENT.NAME}}_{{INTERFACE.NAME}}_{{NAME}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Components/{{COMPONENT.D_NAME.replace('::','/')}}/{{COMPONENT.NAME}}_{{INTERFACE.NAME}}_{{NAME}}.hpp src/Components/{{COMPONENT.D_NAME.replace('::','/')}}/{{COMPONENT.NAME}}_{{INTERFACE.NAME}}_{{NAME}}.cpp"

- NAME: Components.swig
  FOR: "COMPONENTS.*"
  DEFAULT:
    MAIN : "MODEL:."
    FILE : "MODEL:FILE"
  IF:
    SWIG: true
  TARGET_NAME: "COMPONENTS.SWIG.{{D_NAME}}"
  FILES:
    - IN: Components/Component_template.i
      OUT: "swig/Components/{{D_NAME.replace('::','/')}}/{{NAME}}_swig.i"
  COMMANDS:
    - "swig -c++ -python -Iinc -Iswig swig/Components/{{D_NAME.replace('::','/')}}/{{NAME}}_swig.i"
    - "sed -i swig/Components/{{D_NAME.replace('::','/')}}/{{NAME}}_swig_wrap.cxx -e s/{{D_NAME}}::{{NAME}}::{{NAME}}/{{D_NAME}}::{{NAME}}/g"

########################### DEPLOIMENT ###################################
- NAME: Deployment
  TARGET_NAME: "DEPLOYMENT"
  FOR: "DEPLOYMENTS"
  DEFAULT:
    FILE: "MODEL:FILE"
  FILES:
    - IN: Deployments/Deployment_parent.hpp
      OUT: "inc/Deployments/Deployment.hpp"
    - IN: Deployments/Deployment_parent.cpp
      OUT: "src/Deployments/Deployment.cpp"
  COMMANDS:
    - "clang-format -i src/Deployments/Deployment.cpp inc/Deployments/Deployment.hpp"

- NAME: Deployments
  FOR: "DEPLOYMENTS.*"
  TARGET_NAME: "DEPLOYMENTS.{{D_NAME}}"
  DEFAULT:
    FILE : "MODEL:FILE"
  FILES:
    - IN: Deployments/Deployment_template.hpp
      OUT: "inc/Deployments/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp"
    - IN: Deployments/Deployment_template.cpp
      OUT: "src/Deployments/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Deployments/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp src/Deployments/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp"

########################### LINK ##################################
- NAME: Link
  FOR: "LINKS"
  TARGET_NAME: "LINK"
  DEFAULT:
    FILE: "MODEL:FILE"
  FILES: 
    - IN: Links/Link_parent.hpp
      OUT: "inc/Links/Link.hpp"
    - IN: Links/Link_parent.cpp
      OUT: "src/Links/Link.cpp"
  COMMANDS:
    - "clang-format -i inc/Links/Link.hpp src/Links/Link.cpp"

- NAME: Links
  FOR: "LINKS.*"
  TARGET_NAME: "LINKS.{{D_NAME}}"
  DEFAULT:
    FILE: "MODEL:FILE"
  FILES:
    - IN: Links/Link_template.hpp
      OUT: "inc/Links/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp"
    - IN: Links/Link_template.cpp
      OUT: "src/Links/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Links/{{D_NAME.replace('::','/')}}/{{NAME}}.hpp src/Links/{{D_NAME.replace('::','/')}}/{{NAME}}.cpp"

########################### IMPORT ################################

# - NAME: Import              
#   FOR: "IMPORTS"
#   TARGET_NAME: "IMPORTS"
#   DEFAULT:
#     MAIN : "MODEL:."
#   FILES:
#     - IN: "import.txt"
#       OUT: "src/import.txt"


- NAME: CONNECTOR
  FOR: "CONNECTORS.*"
  TARGET_NAME: "Connectors.{{D_NAME}}"
  DEFAULT:
    MAIN : "MODEL:."
  FILES:
    - IN: "Connectors/{{MODEL.CPP}}"
      OUT: "src/connectors/{{D_NAME.replace('::','/')}}.cpp"
    - IN: "Connectors/{{MODEL.HPP}}"
      OUT: "inc/connectors/{{D_NAME.replace('::','/')}}.hpp"
  COMMANDS:
    - "clang-format -i inc/connectors/{{D_NAME.replace('::','/')}}.hpp src/connectors/{{D_NAME.replace('::','/')}}.cpp"

########################### CMAKE #################################

# - NAME: cmake              
#   FOR: ""
#   TARGET_NAME: "CMAKE"
#   FILES: []
#   COMMANDS:
#     - ln -sf ../Compo/CMakeLists.txt .

# - NAME: cmake.find              
#   FOR: ""
#   TARGET_NAME: "CMAKE.FIND"
#   FILES:
#     - IN: "cmake/Config.cmake"
#       OUT: "out/{{options.project.name}}Config.cmake"

- NAME: compile.import
  FOR: ""
  DEFAULT:
    IMPORTS : "MODEL:IMPORTS"
  TARGET_NAME: "COMPILE.IMPORT"
  FILES:
    - IN: "compile/import.cmake"
      OUT: "compile/import.cmake"

- NAME: compile.lib
  FOR: ""
  DEFAULT:
    IMPORTS : "MODEL:IMPORTS"
  TARGET_NAME: "COMPILE.LIB"
  FILES:
    - IN: "compile/links.cmake"
      OUT: "compile/links.cmake"

- NAME: compile.var
  FOR: ""
  DEFAULT:
    IMPORTS : "MODEL:IMPORTS"
  TARGET_NAME: "COMPILE.VAR"
  FILES:
    - IN: "compile/var.cmake"
      OUT: "compile/var.cmake"
