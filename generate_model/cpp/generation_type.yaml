########################### TYPES ######################################
- NAME: Types.Atomic
  TARGET_NAME: "TYPE.{{D_NAME}}"
  FOR: "TYPES.*"
  IF:
    OR:
      NOT:
        NATIF: true
      OPTIONS.TO_DBUS_STREAM: true
  FILES:
    - IN:  "Types/Type_atomic_define.hpp"
      OUT: "inc/Types/{{F_NAME}}.hpp"
    - IN:  "Types/Type_atomic_define.cpp"
      OUT: "src/Types/{{F_NAME}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Types/{{F_NAME}}.hpp "
    - "clang-format -i src/Types/{{F_NAME}}.cpp "

- NAME: Types.union.atomic
  TARGET_NAME: "TYPE.GLOBAL"
  FOR: "TYPES"
  DEFAULT:
    TYPES: "MODEL:TYPES"
    FILE: "MODEL:NAME"
    EVENTS: "MODEL:EVENTS"
    STRUCTS: "MODEL:STRUCTS"
    COMPONENTS: "MODEL:COMPONENTS"
    IMPORTS: "MODEL:IMPORTS"
    ERRORS: "MODEL:ERRORS"
  FILES:
    - IN:  "Data/Type_union_define.hpp"
      OUT: "inc/Data/{{FILE.replace('.yaml','')}}.hpp"
    - IN:  "Data/Type_union_define.cpp"
      OUT: "src/Data/{{FILE.replace('.yaml','')}}.cpp"
  COMMANDS:
    - "clang-format -i inc/Data/{{FILE.replace('.yaml','')}}.hpp "
    - "clang-format -i src/Data/{{FILE.replace('.yaml','')}}.cpp "

- NAME: Types.union.atomic
  TARGET_NAME: "TYPE.GLOBAL"
  FOR: "TYPES"
  DEFAULT:
    TYPES: "MODEL:TYPES"
    FILE: "MODEL:NAME"
    EVENTS: "MODEL:EVENTS"
    STRUCTS: "MODEL:STRUCTS"
    COMPONENTS: "MODEL:COMPONENTS"
    IMPORTS: "MODEL:IMPORTS"
    ERRORS: "MODEL:ERRORS"
  FILES:
    - IN:  "Data/Type_union_define_template.hpp"
      OUT: "inc/Data/{{FILE.replace('.yaml','')}}_template.hpp"
  COMMANDS:
    - "clang-format -i inc/Data/{{FILE.replace('.yaml','')}}_template.hpp "

- NAME: Types.Atomic.swig
  TARGET_NAME: "TYPE.{{D_NAME}}.SWIG"
  FOR: "TYPES.*"
  IF:
    AND:
      NOT:
        NATIF: true
      OPTIONS.SWIG: true
  FILES:
    - IN:  "Types/Type_atomic_define.i"
      OUT: "swig/Types/{{F_NAME}}.i"

########################### DBUS ######################################
- NAME: Types.Atomic.DBUS
  TARGET_NAME: "TYPE.{{D_NAME}}.DBUS"
  FOR: "TYPES.*"
  IF:
    NOT:
      DYNAMIC: true
  FILES:
    - IN:  "Types/Type_atomic_define_dbus.cpp"
      OUT: "src/Types/{{F_NAME}}_dbus.cpp"
  COMMANDS:
    - "clang-format -i src/Types/{{F_NAME}}_dbus.cpp "

- NAME: Types.Atomic.H.DBUS
  TARGET_NAME: "TYPE.{{D_NAME}}.H.DBUS"
  FOR: "TYPES.*"
  IF:
    DYNAMIC: true
  FILES:
    - IN:  "Types/Type_atomic_define_dbus.hpp"
      OUT: "inc/Types/{{F_NAME}}_dbus.hpp"
  COMMANDS:
    - "clang-format -i inc/Types/{{F_NAME}}_dbus.hpp "
