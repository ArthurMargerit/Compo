stages:
  - model_expand
  - model_detect
  - cpp_clang
  - cpp_gcc
  - graph
  - uml
  - other

model_detect_full:
  stage: model_detect
  tags:
    - python
  script:
    - cd Test/detectMe
    - sh ./test.sh
  allow_failure: true

model_expand_full:
  stage: model_expand
  tags:
    - python
  script:
    - cd Test/expandMe
    - sh ./test.sh
  allow_failure: true


######################CPP
cpp_clang_EMPTY:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 0.EMPTY

cpp_clang_TYPE:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 1.TYPE

cpp_clang_TYPE:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 1.ERROR

cpp_clang_STRUCT:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 1.STRUCT

cpp_clang_INTERFACE:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 2.INTERFACE

cpp_clang_CONNECTOR:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 3.CONNECTOR

cpp_clang_COMPONENT:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 3.COMPONENT

cpp_clang_LINK:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 4.LINK

cpp_clang_DEPLOYMENT:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 5.DEPLOYMENT

cpp_clang_TEST:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 6.TEST

cpp_clang_IMPORT:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 7.IMPORT

cpp_clang_SWIG:
  stage: cpp_clang
  tags:
    - python
  script:
    - cd Test/gen/
    - CXX=clang++ COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 8.SWIG

######################CPP gcc
cpp_gcc_EMPTY:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 0.EMPTY

cpp_gcc_TYPE:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 1.TYPE

cpp_gcc_TYPE:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 1.ERROR

cpp_gcc_STRUCT:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 1.STRUCT

cpp_gcc_INTERFACE:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 2.INTERFACE

cpp_gcc_CONNECTOR:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 3.CONNECTOR

cpp_gcc_COMPONENT:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 3.COMPONENT

cpp_gcc_LINK:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 4.LINK

cpp_gcc_DEPLOYMENT:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 5.DEPLOYMENT

cpp_gcc_TEST:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 6.TEST

cpp_gcc_IMPORT:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 7.IMPORT

cpp_gcc_SWIG:
  stage: cpp_gcc
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh cpp 8.SWIG

######################GRAPH
graph_TYPE:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh graph 1.TYPE

graph_STRUCT:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh graph 1.STRUCT

graph_DEPLOYMENT:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh graph 5.DEPLOYMENT

graph_LINK:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh graph 4.LINK

graph_INTERFACE:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh graph 2.INTERFACE

graph_COMPONENT:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh graph 3.COMPONENT

######################UML
uml_TYPE:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  COMPO_WORKDIR_TMP=1 ./run_test.sh uml 1.TYPE

uml_STRUCT:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  COMPO_WORKDIR_TMP=1 ./run_test.sh uml 1.STRUCT

uml_INTERFACE:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  COMPO_WORKDIR_TMP=1 ./run_test.sh uml 2.INTERFACE

uml_COMPONENT:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  COMPO_WORKDIR_TMP=1 ./run_test.sh uml 3.COMPONENT

uml_LINK:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  COMPO_WORKDIR_TMP=1 ./run_test.sh uml 4.LINK

uml_DEPLOYMENT:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  COMPO_WORKDIR_TMP=1 ./run_test.sh uml 5.DEPLOYMENT

#####################PYTHON
python_full:
  stage: other
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh python
