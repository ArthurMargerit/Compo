stages:
  - model_expand
  - model_detect
  - cpp
  - graph
  - uml
  - other

model_detect_full:
  stage: model_detect
  tags:
    - python
  script:
    - cd Test/detectMe
    - sh ./test.sh
  allow_failure: true

model_expand_full:
  stage: model_expand
  tags:
    - python
  script:
    - cd Test/expandMe
    - sh ./test.sh
  allow_failure: true


######################CPP

cpp_EMPTY:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 0.EMPTY

cpp_TYPE:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 1.TYPE

cpp_TYPE:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 1.ERROR

cpp_STRUCT:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 1.STRUCT

cpp_INTERFACE:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 2.INTERFACE

cpp_CONNECTOR:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 3.CONNECTOR

cpp_COMPONENT:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 3.COMPONENT

cpp_LINK:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 4.LINK

cpp_DEPLOYMENT:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 5.DEPLOYMENT

cpp_TEST:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 6.TEST

cpp_IMPORT:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 7.IMPORT

cpp_SWIG:
  stage: cpp
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh cpp 8.SWIG


######################GRAPH
graph_TYPE:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh graph 1.TYPE

graph_STRUCT:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh graph 1.STRUCT

graph_DEPLOYMENT:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh graph 5.DEPLOYMENT

graph_LINK:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh graph 4.LINK

graph_INTERFACE:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh graph 2.INTERFACE

graph_COMPONENT:
  stage: graph
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh graph 3.COMPONENT

######################UML
uml_TYPE:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh uml 1.TYPE

uml_STRUCT:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh uml 1.STRUCT

uml_INTERFACE:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh uml 2.INTERFACE

uml_COMPONENT:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh uml 3.COMPONENT

uml_LINK:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh uml 4.LINK

uml_DEPLOYMENT:
  stage: uml
  tags:
    - python
  script:
    - cd Test/gen/
    - sh  ./run_test2.sh uml 5.DEPLOYMENT

#####################PYTHON
python_full:
  stage: other
  tags:
    - python
  script:
    - cd Test/gen/
    - sh ./run_test2.sh python
