stages:
  - model_expand
  - model_detect

  - CompoMe_Core
  - CompoMe_Opt
  - CompoMe_Link

  - cpp_clang
  - cpp_example
  - graph
  - uml
  - other

variables:
  CXX: "clang++"
  TERM: xterm

model_detect_full:
  stage: model_detect
  retry: 2
  tags:
    - python
  script:
    - cd Test/detectMe
    - sh ./test.sh
  allow_failure: true

model_expand_full:
  stage: model_expand
  retry: 2
  tags:
    - python
  script:
    - cd Test/expandMe
    - sh ./test.sh
  allow_failure: true


###################### CPP BEFORE
CompoMe_Test:
  stage: CompoMe_Core
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_PATH=$(pwd) 
    - cd Test/gen
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe_Test
  artifacts:
    paths:
      - build/CompoMe_Test

CompoMe_Core:
  stage: CompoMe_Core
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe cpp_before/CompoMe_Log cpp_before/CompoMe_Swig cpp_before/CompoMe_Tools
    - COMPOME_MODEL=GRAPH ./run_before.sh cpp_before/CompoMe cpp_before/CompoMe_Log cpp_before/CompoMe_Swig cpp_before/CompoMe_Tools
  artifacts:
    paths:
      - build/CompoMe
      - build/CompoMe_Log
      - build/CompoMe_Swig
      - build/CompoMe_Tools

CompoMe_Async:
  stage: CompoMe_Opt
  retry: 2
  tags:
    - python
  needs: ['CompoMe_Core']
  script:
    - export COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe_Async
    - COMPOME_MODEL=GRAPH ./run_before.sh cpp_before/CompoMe_Async
  artifacts:
    paths:
      - build/CompoMe_Async

CompoMe_Udp:
  stage: CompoMe_Link
  retry: 2
  tags:
    - python
  needs: ['CompoMe_Core']
  script:
    - export COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe_Udp
    - COMPOME_MODEL=GRAPH ./run_before.sh cpp_before/CompoMe_Udp
  artifacts:
    paths:
      - build/CompoMe_Udp

CompoMe_Zmq:
  stage: CompoMe_Link
  retry: 2
  tags:
    - python
  needs: ['CompoMe_Core']
  script:
    - export COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe_Zmq
    - COMPOME_MODEL=GRAPH ./run_before.sh cpp_before/CompoMe_Zmq
  artifacts:
    paths:
      - build/CompoMe_Zmq

CompoMe_Tcp:
  stage: CompoMe_Link
  retry: 2
  tags:
    - python
  needs: ['CompoMe_Core']
  script:
    - export COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe_Tcp
    - COMPOME_MODEL=GRAPH ./run_before.sh cpp_before/CompoMe_Tcp
  artifacts:
    paths:
      - build/CompoMe_Tcp

CompoMe_Web:
  stage: CompoMe_Link
  retry: 2
  tags:
    - python
  needs: ['CompoMe_Core']
  script:
    - export COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe_Http cpp_before/CompoMe_Https
    - COMPOME_MODEL=GRAPH ./run_before.sh cpp_before/CompoMe_Http cpp_before/CompoMe_Https
  artifacts:
    paths:
      - build/CompoMe_Http
      - build/CompoMe_Https

CompoMe_Dbus:
  stage: CompoMe_Link
  retry: 2
  tags:
    - python
  needs: ['CompoMe_Core']
  script:
    - export COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - COMPOME_MODEL=CPP ./run_before.sh cpp_before/CompoMe_Dbus
    - COMPOME_MODEL=GRAPH ./run_before.sh cpp_before/CompoMe_Dbus
  artifacts:
    paths:
      - build/CompoMe_Dbus

# ######################################## CPP TEST

cpp_clang_EMPTY:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 0.EMPTY

cpp_clang_TYPE:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 1.TYPE

cpp_clang_ERROR:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 1.ERROR

cpp_clang_STRUCT:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Dbus", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 1.STRUCT

cpp_clang_INTERFACE:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Dbus", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 2.INTERFACE

cpp_clang_EVENT:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Dbus", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 2.EVENT

cpp_clang_CONNECTOR:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Udp", "CompoMe_Test", "CompoMe_Async"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 3.CONNECTOR

cpp_clang_COMPONENT:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 3.COMPONENT

cpp_clang_LINK:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Dbus", "CompoMe_Test", "CompoMe_Web", "CompoMe_Tcp","CompoMe_Udp","CompoMe_Zmq"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1
    - cd Test/gen/
    - ./run_test.sh cpp 4.LINK

cpp_clang_DEPLOYMENT:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1
    - cd Test/gen/
    - ./run_test.sh cpp 5.DEPLOYMENT

cpp_clang_IMPORT:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1
    - cd Test/gen/
    - ./run_test.sh cpp 7.IMPORT

cpp_clang_SWIG:
  stage: cpp_clang
  needs: ["CompoMe_Core", "CompoMe_Test", "CompoMe_Udp", "CompoMe_Tcp", "CompoMe_Zmq"]
  retry: 2
  tags:
    - python
  script:
    - export COMPO_WORKDIR_TMP=1 
    - cd Test/gen/
    - ./run_test.sh cpp 8.SWIG

################################ Cpp Example
cpp_example_HelloWord:
  stage: cpp_example
  needs: ["CompoMe_Core", "CompoMe_Udp"]
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/HelloWord
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_SwigWithMe:
  stage: cpp_example
  needs: ["CompoMe_Core"]
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/SwigWithMe
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_Car:
  stage: cpp_example
  needs: ["CompoMe_Core"]
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/Car
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_Interface:
  stage: cpp_example
  needs: ["CompoMe_Core"]
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/Interface
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_Serialization:
  stage: cpp_example
  needs: ["CompoMe_Core"]
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/Serialization
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_Dbus_client:
  stage: cpp_example
  needs: ["CompoMe_Core", "CompoMe_Dbus"]
  retry: 2
  tags:
    - python
  script:
    - export COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/dbus_client
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_Dbus_server:
  stage: cpp_example
  needs: ["CompoMe_Core", "CompoMe_Dbus"]
  retry: 2
  tags:
    - python
  script:
    - export  COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/dbus_server
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_http_server:
  stage: cpp_example
  needs: ["CompoMe_Core", "CompoMe_Web"]
  retry: 2
  tags:
    - python
  script:
    - export  COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/Http_server
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make

cpp_example_https_server:
  stage: cpp_example
  needs: ["CompoMe_Core", "CompoMe_Web"]
  retry: 2
  tags:
    - python
  script:
    - export  COMPOME_MODEL_PATH=$(echo $(pwd)/build/* | tr ' ' ':'):. COMPOME_PATH=$(pwd) COMPOME_MODEL=CPP
    - cd Examples/Https_server
    - ${COMPOME_PATH}/compome generate -f file.yaml
    - cmake .
    - make
  
# ######################GRAPH
graph:
  stage: graph
  needs: ["CompoMe_Core", "CompoMe_Async", "CompoMe_Dbus", "CompoMe_Tcp", "CompoMe_Zmq", "CompoMe_Web", "CompoMe_Udp", "CompoMe_Test"]
  retry: 2
  tags:
    - python
  script:
    - export  COMPO_WORKDIR_TMP=1 COMPOME_PATH=$(pwd)
    - cd Test/gen/
    - ./run_test.sh graph

# ######################UM
include:
  - local: '/.gitlab-ci_uml.yaml'

# #####################PYTHON
python_full:
  stage: other
  retry: 2
  tags:
    - python
  script:
    - cd Test/gen/
    - COMPO_WORKDIR_TMP=1 ./run_test.sh python
